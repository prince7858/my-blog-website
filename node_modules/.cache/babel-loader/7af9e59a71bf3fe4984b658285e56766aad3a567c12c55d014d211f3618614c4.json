{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pk\\\\my-blog\\\\src\\\\components\\\\BlogPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// Other imports...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPreview = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Replace with your API endpoint\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => {\n      const transformedPosts = data.slice(0, 5).map(post => ({\n        id: post.id,\n        title: post.title,\n        content: post.body\n      }));\n      setPosts(transformedPosts);\n    }).catch(error => console.error('Error fetching posts:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlogContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(BlogCard, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${post.id}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: [/*#__PURE__*/_jsxDEV(BlogTitle, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [post.content.substring(0, 100), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPreview, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = BlogPreview;\nvar _c;\n$RefreshReg$(_c, \"BlogPreview\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BlogPreview","_s","posts","setPosts","fetch","then","response","json","data","transformedPosts","slice","map","post","id","title","content","body","catch","error","console","BlogContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","BlogCard","Link","to","style","textDecoration","color","BlogTitle","substring","_c","$RefreshReg$"],"sources":["C:/Users/pk/my-blog/src/components/BlogPreview.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// Other imports...\r\n\r\nconst BlogPreview = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace with your API endpoint\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const transformedPosts = data.slice(0, 5).map(post => ({\r\n          id: post.id,\r\n          title: post.title,\r\n          content: post.body,\r\n        }));\r\n        setPosts(transformedPosts);\r\n      })\r\n      .catch(error => console.error('Error fetching posts:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <BlogContainer>\r\n      <h2>Latest Blog Posts</h2>\r\n      {posts.map(post => (\r\n        <BlogCard key={post.id}>\r\n          <Link to={`/post/${post.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n            <BlogTitle>{post.title}</BlogTitle>\r\n            <p>{post.content.substring(0, 100)}...</p>\r\n          </Link>\r\n        </BlogCard>\r\n      ))}\r\n    </BlogContainer>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,KAAK;QACrDC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,OAAO,EAAEH,IAAI,CAACI;MAChB,CAAC,CAAC,CAAC;MACHb,QAAQ,CAACM,gBAAgB,CAAC;IAC5B,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA,CAACqB,aAAa;IAAAC,QAAA,gBACZtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBvB,KAAK,CAACS,GAAG,CAACC,IAAI,iBACbb,OAAA,CAAC2B,QAAQ;MAAAL,QAAA,eACPtB,OAAA,CAAC4B,IAAI;QAACC,EAAE,EAAE,SAAShB,IAAI,CAACC,EAAE,EAAG;QAACgB,KAAK,EAAE;UAAEC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAV,QAAA,gBAChFtB,OAAA,CAACiC,SAAS;UAAAX,QAAA,EAAET,IAAI,CAACE;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACnC1B,OAAA;UAAAsB,QAAA,GAAIT,IAAI,CAACG,OAAO,CAACkB,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC,GAJMb,IAAI,CAACC,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAACxB,EAAA,CA/BID,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}