{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pk\\\\my-blog\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// pages/AdminDashboard.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  padding: 2rem;\n`;\n_c = DashboardContainer;\nconst Title = styled.h1`\n  text-align: center;\n`;\n_c2 = Title;\nconst PostForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  margin: auto;\n`;\n_c3 = PostForm;\nconst Input = styled.input`\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n`;\n_c4 = Input;\nconst TextArea = styled.textarea`\n  margin: 0.5rem 0;\n  padding: 0.5rem;\n`;\n_c5 = TextArea;\nconst SubmitButton = styled.button`\n  padding: 0.5rem;\n  background: #6c63ff;\n  color: white;\n  border: none;\n  cursor: pointer;\n`;\n_c6 = SubmitButton;\nconst AdminDashboard = () => {\n  _s();\n  //const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would send data to the backend or update your state\n    console.log('New Post:', {\n      title,\n      content\n    });\n    // Clear the form\n    setTitle('');\n    setContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Post Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        rows: \"5\",\n        placeholder: \"Post Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n_c7 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"PostForm\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TextArea\");\n$RefreshReg$(_c6, \"SubmitButton\");\n$RefreshReg$(_c7, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","styled","useNavigate","jsxDEV","_jsxDEV","DashboardContainer","div","_c","Title","h1","_c2","PostForm","form","_c3","Input","input","_c4","TextArea","textarea","_c5","SubmitButton","button","_c6","AdminDashboard","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","rows","_c7","$RefreshReg$"],"sources":["C:/Users/pk/my-blog/src/pages/AdminDashboard.js"],"sourcesContent":["// pages/AdminDashboard.js\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nconst PostForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 600px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  margin: 0.5rem 0;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  margin: 0.5rem 0;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  padding: 0.5rem;\r\n  background: #6c63ff;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AdminDashboard = () => {\r\n  //const navigate = useNavigate();\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Here you would send data to the backend or update your state\r\n    console.log('New Post:', { title, content });\r\n    // Clear the form\r\n    setTitle('');\r\n    setContent('');\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Title>Admin Dashboard</Title>\r\n      <PostForm onSubmit={handleSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Post Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <TextArea\r\n          rows=\"5\"\r\n          placeholder=\"Post Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n        />\r\n        <SubmitButton type=\"submit\">Create Post</SubmitButton>\r\n      </PostForm>\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAG;AACrC;AACA,CAAC;AAACC,EAAA,GAFIF,kBAAkB;AAIxB,MAAMG,KAAK,GAAGP,MAAM,CAACQ,EAAE;AACvB;AACA,CAAC;AAACC,GAAA,GAFIF,KAAK;AAIX,MAAMG,QAAQ,GAAGV,MAAM,CAACW,IAAI;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,QAAQ;AAOd,MAAMG,KAAK,GAAGb,MAAM,CAACc,KAAK;AAC1B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,KAAK;AAKX,MAAMG,QAAQ,GAAGhB,MAAM,CAACiB,QAAQ;AAChC;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,QAAQ;AAKd,MAAMG,YAAY,GAAGnB,MAAM,CAACoB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,YAAY;AAQlB,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM6B,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;MAAER,KAAK;MAAEE;IAAQ,CAAC,CAAC;IAC5C;IACAD,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACExB,OAAA,CAACC,kBAAkB;IAAA6B,QAAA,gBACjB9B,OAAA,CAACI,KAAK;MAAA0B,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9BlC,OAAA,CAACO,QAAQ;MAAC4B,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC/B9B,OAAA,CAACU,KAAK;QACJ0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAEjB,KAAM;QACbkB,QAAQ,EAAGb,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlC,OAAA,CAACa,QAAQ;QACP6B,IAAI,EAAC,GAAG;QACRL,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEf,OAAQ;QACfgB,QAAQ,EAAGb,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC5CG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlC,OAAA,CAACgB,YAAY;QAACoB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEzB,CAAC;AAACd,EAAA,CApCID,cAAc;AAAAwB,GAAA,GAAdxB,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAhB,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAAzC,EAAA;AAAAyC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAAnC,GAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}